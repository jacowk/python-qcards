System Requirements
====================

This application is used to manage and review qcards at scheduled intervals.

Categories represents larger topics, for example Java or Python. One category can have multiple stacks associated with it.

Stacks represents a stack of QCards to be reviewed together, and that related to the Category. A stack can be a subcategory of the broader category, for example a stack of qcards related to java.lang methods. One stack can have multiple cards associated with it. A stack has a last review date and a next review date. All stacks that are active and that has a next review date of today, should be retrieved for review.

Review phases represents the stages when stacks can be scheduled to be reviewed. A stack can be scheduled for review as follows:
- Daily review
- Review every 2nd day, odd days (1, 3, 5, etc) or even days (2, 4, 6, etc)
- Weekly review - A stack can be scheduled for review on a specified day of the week, Mon, Tue, Wed, etc
- Weekly also has a related week count. 1 = Review once a week. 2 = Review once every 2nd week. 3 = Review once every 3rd week. It's not necessary to define 4, because that is once a month.
- Monthly review - A stack can be scheduled for review on a specified day of the month, 1, 2, 3, 4, etc.
- Monthly also has a related month count. 1 = Review once a month. 2 = Review once every 2nd month. Etc

Cards represents cards that can be reviewed. A card has a title, a front and back content. The idea is to first display the front, and then on user action, a click or enter, display the back content. Card has a view count and group count.
View count means that every time the user views it, the view count is incremented.
Group count has 3 possible values. 1 = Front, 2 = Middle, 3 = Back. When retrieving the cards, order them by first by group count, and then by card id, the primary key of t_card. In this way, you can control which cards you want to review first.
A card also has an active flag. Only review cards that are active. Using this flag, you can control which cards you want to view or not view.

Use Cases
=========
--------------------------
Domain object: Category
--------------------------
Use cases:
- Add category
- Update category
- Retrieve category by id
- Retrieve all categories
- Retrieve all active categories
- Activate/Deactivate a category

Properties
-id
-description
-active

--------------------------
Domain object: Stack
--------------------------
Use cases:
- Add stack
- Update stack
- Retrieve stack by id
- Retrieve all stacks
- Retrieve stacks by category id
- Retrieve active stacks by category id
- Calculate next review date
--Calculate next review date for odd_even view phase
--Calculate next review date for weekly view phase
--Calculate next review date for monthly view phase
- Update the last review date
- Update the next review date
- Update review phase (update review_phase_cd)
--Set odd even review phase
--Set weekly review phase
--Set monthly review phase
- Activate/Deactivate stack
- Retrieve all stacks for review today (where next_review_date is today)
-- For daily review phase, by default, retrieve all of them by category_id

Properties
-id
-description
-active
-source
-category_id
-last_review_date
-next_review_date
-review_phase_id (t_review_phase)

--------------------------
Domain object: Review Phase
--------------------------
Use cases:
- Add review phase
- Update review phase
- Retrieve view phase by stack id

Properties
-id
-stack_id
-review_phase_cd (t_lookup_review_phase)
-odd_even (t_lookup_odd_even)
-week_day (Mon, Tue, Wed - Only applicable to Weekly review phase)
-week_count (1 = once a week, 2 = every 2nd week, 3 = every third week)
-calendar_day (1, 2, 3 - Only applicable to Monthly review phase)
-month_count (1 = once a month, 2 = every 2nd month, etc)

Create table t_lookup_odd_even
Records:
1 - Odd
2 - Even

Create table t_review_stage
Records:
1 - Daily
2 - Odd or Even Days (Has odd_even_cd joining with t_odd_even)
3 - Weekly (Has weekday column (Mon, Tue, Wed, etc), and week_count column (1 = once a week, 2 = every 2nd week, 3 = every third week)
4 - Monthly (Has a calendar_day (1, 2, 3, 4, etc), and month_count column (1 = once a month, 2 = every 2nd month, etc))

--------------------------
Domain object: Card
--------------------------
Use cases:
- Add card
- Update card
- Retrieve all active cards by stack id
- Activate/Deactivate card

Properties
-id
-title
-front_content
-back_content
-stack_id
-view_count
-group_cd - t_lookup_group
-active

Create table t_lookup_group (Determines the order of viewing cards in a stack, order by group_cnt, id of t_card)
Records:
1 - Front
2 - Middle
3 - Back


UI Python Scripts
=================
qcards_app.py - The main qcards application, using Tkinter.
category_gui.py - Containing user interface code for managing categories using Tkinter.
qcards_gui_util.py - A util file containing utilities for the gui

Backend Python Scripts
======================
manage-categories.py - A script containing classes to manage categories, such as inserting categories to a database, updating categories, and retrieving categories.
qcards_db.py - A script for performing database functions in a generic way.
qcards_date_util.py - A script with functions to do all kinds of date calculations
manage-stacks.py - A script containing classes to manage stack related database operations.

Resources:
https://www.pythontutorial.net/tkinter/tkinter-ttk/
https://www.pythontutorial.net/tkinter/tkinter-theme/
https://pypi.org/project/convertdate/
https://www.tutorialspoint.com/how-to-clear-items-from-a-ttk-treeview-widget
https://www.tutorialspoint.com/how-to-change-ttk-treeview-column-width-and-weight-in-python-3-3
https://pythonguides.com/python-tkinter-treeview/
https://www.pythonguis.com/faq/pack-place-and-grid-in-tkinter/
https://www.askpython.com/python-modules/tkinter/tkinter-intvar
https://www.javatpoint.com/atom-python

Resources (MySQL):
https://www.mysqltutorial.org/mysql-add-column/
http://www.squirrelsql.org/
